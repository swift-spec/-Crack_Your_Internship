class Solution {
public:
    bool dfs(int src, int parent, vector<int> vis, vector<int> adj[]) {
    vis[src] = 1;
    for (auto x : adj[src]) {
        if (!vis[x]) {
            if (dfs(x, src, vis, adj)) {
                return true;
            }
        } else if (x != parent) {
            return true;
        }
    }
    return false;
}

bool isCycle(int V, vector<int> adj[]) {
    vector<int> vis(V, 0); // Initialize vis[] with zeros
    for (int i = 0; i < V; i++) {
        if (!vis[i] && dfs(i, -1, vis, adj)) {
            return true;
        }
    }
    return false;
 }
};
